{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nfunction UserAPI(token) {\n  _s();\n\n  const [isLogged, setIsLogged] = useState(false);\n  const [isAdmin, setIsAdmin] = useState(false);\n  const [cart, setCart] = useState([]);\n  useEffect(() => {\n    if (token) {\n      const getUser = async () => {\n        try {\n          const res = await axios.get('/user/infor', {\n            headers: {\n              Authorization: token\n            }\n          });\n          setIsLogged(true);\n          res.data.role === 1 ? setIsAdmin(true) : setIsAdmin(false);\n        } catch (err) {\n          alert(err.response.data.msg);\n        }\n      };\n\n      getUser();\n    }\n  }, [token]);\n\n  const addCart = async product => {\n    if (!isLogged) return alert(\"Please login to continue buying\");\n    const check = cart.every(item => {\n      return item._id !== product._id;\n    });\n\n    if (check) {\n      setCart([...cart, { ...product,\n        quantity: 1\n      }]);\n    } else {\n      alert(\"This product has been added to cart.\");\n    }\n  };\n\n  return {\n    isLogged: [isLogged, setIsLogged],\n    isAdmin: [isAdmin, setIsAdmin],\n    cart: [cart, setCart],\n    addCart: addCart\n  };\n}\n\n_s(UserAPI, \"bRWEenHGuj23AV38AmLORPHuZ9g=\");\n\n_c = UserAPI;\nexport default UserAPI;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserAPI\");","map":{"version":3,"sources":["/Users/rojakamalakannan/Ecommerce-project/client/src/api/UserAPI.js"],"names":["useState","useEffect","axios","UserAPI","token","isLogged","setIsLogged","isAdmin","setIsAdmin","cart","setCart","getUser","res","get","headers","Authorization","data","role","err","alert","response","msg","addCart","product","check","every","item","_id","quantity"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAmC,OAAnC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAGA,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AAAA;;AACpB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACS,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,EAAD,CAAhC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACb,QAAGG,KAAH,EAAS;AACL,YAAMO,OAAO,GAAG,YAAW;AACvB,YAAG;AACA,gBAAMC,GAAG,GAAG,MAAMV,KAAK,CAACW,GAAN,CAAU,aAAV,EAAwB;AACtCC,YAAAA,OAAO,EAAE;AAACC,cAAAA,aAAa,EAAEX;AAAhB;AAD6B,WAAxB,CAAlB;AAIAE,UAAAA,WAAW,CAAC,IAAD,CAAX;AACAM,UAAAA,GAAG,CAACI,IAAJ,CAASC,IAAT,KAAkB,CAAlB,GAAsBT,UAAU,CAAC,IAAD,CAAhC,GAAyCA,UAAU,CAAC,KAAD,CAAnD;AAGF,SATD,CASC,OAAOU,GAAP,EAAW;AACRC,UAAAA,KAAK,CAACD,GAAG,CAACE,QAAJ,CAAaJ,IAAb,CAAkBK,GAAnB,CAAL;AACH;AACJ,OAbD;;AAeAV,MAAAA,OAAO;AACV;AACH,GAnBQ,EAmBP,CAACP,KAAD,CAnBO,CAAT;;AAqBA,QAAMkB,OAAO,GAAG,MAAOC,OAAP,IAAmB;AAC/B,QAAG,CAAClB,QAAJ,EAAc,OAAOc,KAAK,CAAC,iCAAD,CAAZ;AAEd,UAAMK,KAAK,GAAGf,IAAI,CAACgB,KAAL,CAAWC,IAAI,IAAG;AAC5B,aAAOA,IAAI,CAACC,GAAL,KAAaJ,OAAO,CAACI,GAA5B;AACH,KAFa,CAAd;;AAGA,QAAGH,KAAH,EAAS;AACLd,MAAAA,OAAO,CAAC,CAAC,GAAGD,IAAJ,EAAU,EAAC,GAAGc,OAAJ;AAAaK,QAAAA,QAAQ,EAAE;AAAvB,OAAV,CAAD,CAAP;AAEH,KAHD,MAGK;AACDT,MAAAA,KAAK,CAAE,sCAAF,CAAL;AACH;AACJ,GAZD;;AAcA,SAAM;AACHd,IAAAA,QAAQ,EAAE,CAACA,QAAD,EAAWC,WAAX,CADP;AAEHC,IAAAA,OAAO,EAAE,CAACA,OAAD,EAAUC,UAAV,CAFN;AAGHC,IAAAA,IAAI,EAAE,CAACA,IAAD,EAAMC,OAAN,CAHH;AAIHY,IAAAA,OAAO,EAAEA;AAJN,GAAN;AAOH;;GA/CQnB,O;;KAAAA,O;AAiDT,eAAeA,OAAf","sourcesContent":["import  {useState, useEffect} from 'react';\nimport axios from 'axios';\n\n\nfunction UserAPI(token) {\n    const [isLogged, setIsLogged] = useState(false)\n    const [isAdmin, setIsAdmin] = useState(false)\n    const [cart, setCart] = useState([])\n\n    useEffect(() => {\n       if(token){\n           const getUser = async () =>{\n               try{\n                  const res = await axios.get('/user/infor',{\n                      headers: {Authorization: token}\n                  })\n\n                  setIsLogged(true)\n                  res.data.role === 1 ? setIsAdmin(true) : setIsAdmin(false)\n\n                \n               }catch (err){\n                   alert(err.response.data.msg)\n               }\n           }\n\n           getUser()\n       }\n    },[token])\n\n    const addCart = async (product) => {\n        if(!isLogged) return alert(\"Please login to continue buying\")\n\n        const check = cart.every(item =>{\n            return item._id !== product._id\n        })\n        if(check){\n            setCart([...cart, {...product, quantity: 1}])\n\n        }else{\n            alert (\"This product has been added to cart.\")\n        }\n    }\n\n    return{\n       isLogged: [isLogged, setIsLogged],\n       isAdmin: [isAdmin, setIsAdmin],\n       cart: [cart,setCart],\n       addCart: addCart\n    }\n     \n}\n\nexport default UserAPI"]},"metadata":{},"sourceType":"module"}