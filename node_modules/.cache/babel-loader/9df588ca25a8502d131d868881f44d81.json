{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nfunction UserAPI(token) {\n  _s();\n\n  const [isLogged, setIsLogged] = useState(false);\n  const [isAdmin, setIsAdmin] = useState(false);\n  useEffect(() => {\n    if (token) {\n      const getUser = async () => {\n        try {\n          const res = await axios.get('/user/infor', {\n            headers: {\n              Authorization: token\n            }\n          });\n          setIsLogged(true);\n          res.data.role === 1 ? setIsAdmin(true) : setIsAdmin(false);\n          console.log(res);\n        } catch (err) {\n          alert(err.response.data.msg);\n        }\n      };\n\n      getUser();\n    }\n  }, [token]);\n  return {\n    isLogged: [isLogged, setIsLogged],\n    isAdmin: [isAdmin, setIsAdmin]\n  };\n}\n\n_s(UserAPI, \"/0VDIA3txUMwdUWA8vY9yR8e4Rg=\");\n\n_c = UserAPI;\nexport default UserAPI;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserAPI\");","map":{"version":3,"sources":["/Users/rojakamalakannan/Ecommerce-project/client/src/api/UserAPI.js"],"names":["React","useState","useEffect","axios","UserAPI","token","isLogged","setIsLogged","isAdmin","setIsAdmin","getUser","res","get","headers","Authorization","data","role","console","log","err","alert","response","msg"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAGA,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AAAA;;AACpB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,KAAD,CAAtC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACb,QAAGG,KAAH,EAAS;AACL,YAAMK,OAAO,GAAG,YAAW;AACvB,YAAG;AACA,gBAAMC,GAAG,GAAG,MAAMR,KAAK,CAACS,GAAN,CAAU,aAAV,EAAwB;AACtCC,YAAAA,OAAO,EAAE;AAACC,cAAAA,aAAa,EAAET;AAAhB;AAD6B,WAAxB,CAAlB;AAIAE,UAAAA,WAAW,CAAC,IAAD,CAAX;AACAI,UAAAA,GAAG,CAACI,IAAJ,CAASC,IAAT,KAAiB,CAAjB,GAAqBP,UAAU,CAAC,IAAD,CAA/B,GAAwCA,UAAU,CAAC,KAAD,CAAlD;AAEAQ,UAAAA,OAAO,CAACC,GAAR,CAAYP,GAAZ;AACF,SATD,CASC,OAAOQ,GAAP,EAAW;AACRC,UAAAA,KAAK,CAACD,GAAG,CAACE,QAAJ,CAAaN,IAAb,CAAkBO,GAAnB,CAAL;AACH;AACJ,OAbD;;AAeAZ,MAAAA,OAAO;AACV;AACH,GAnBQ,EAmBP,CAACL,KAAD,CAnBO,CAAT;AAqBA,SAAM;AACHC,IAAAA,QAAQ,EAAE,CAACA,QAAD,EAAWC,WAAX,CADP;AAEHC,IAAAA,OAAO,EAAE,CAACA,OAAD,EAAUC,UAAV;AAFN,GAAN;AAKH;;GA9BQL,O;;KAAAA,O;AAgCT,eAAeA,OAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport axios from 'axios';\n\n\nfunction UserAPI(token) {\n    const [isLogged, setIsLogged] = useState(false)\n    const [isAdmin, setIsAdmin] = useState(false)\n\n    useEffect(() => {\n       if(token){\n           const getUser = async () =>{\n               try{\n                  const res = await axios.get('/user/infor',{\n                      headers: {Authorization: token}\n                  })\n\n                  setIsLogged(true)\n                  res.data.role ===1 ? setIsAdmin(true) : setIsAdmin(false)\n\n                  console.log(res)\n               }catch (err){\n                   alert(err.response.data.msg)\n               }\n           }\n\n           getUser()\n       }\n    },[token])\n\n    return{\n       isLogged: [isLogged, setIsLogged],\n       isAdmin: [isAdmin, setIsAdmin]\n    }\n     \n}\n\nexport default UserAPI"]},"metadata":{},"sourceType":"module"}